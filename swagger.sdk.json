{
  "basePath": "/pdf/1.1",
  "paths": {
    "/conversion2pdf/jobs/{jobid}/streams/location": {"post": {
      "summary": "Add Input Stream Location(s)",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Add image, office or pdf input stream location(s) from the storage API for conversion to PDF. Please note that you can upload multiple files. Conversion will not be started yet.",
      "operationId": "addInputStreamLocations",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/ConversionJobResponse"},
          "description": "Stream location(s) added. The JSON Job response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Job could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        },
        {
          "schema": {
            "type": "array",
            "items": {"$ref": "#/definitions/StreamLocation"}
          },
          "in": "body",
          "name": "inputStreamLocations",
          "description": "The (additional) binary image or PDF (file/inputstream) to convert to PDF",
          "required": true
        }
      ],
      "tags": ["Conversion2PDF"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/conversion2pdf/jobs": {
      "post": {
        "summary": "Create a PDF conversion job",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Create a PDF conversion job using optional settings supplied, otherwise defaults will be used",
        "operationId": "createJob",
        "responses": {"201": {
          "schema": {"$ref": "#/definitions/ConversionJobResponse"},
          "description": "PDF conversion job created successfully. Conversion job created but not started yet"
        }},
        "parameters": [{
          "schema": {"$ref": "#/definitions/ConversionSettings"},
          "in": "body",
          "name": "settings",
          "description": "Optional settings to use for this job",
          "required": false
        }],
        "tags": ["Conversion2PDF"],
        "consumes": ["application/json;charset=UTF-8"]
      },
      "get": {
        "summary": "Get all jobs",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get all PDF job definitions and their current state.",
        "operationId": "getJobs",
        "responses": {"200": {
          "schema": {
            "type": "array",
            "items": {"$ref": "#/definitions/ConversionJobResponse"}
          },
          "description": "All PDF jobs that have not been deleted"
        }},
        "parameters": [{
          "in": "query",
          "name": "status",
          "description": "A list of status to filter on.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "INIT",
              "INPUTS_UPLOADED",
              "PROCESSING",
              "DONE",
              "ERROR",
              "DELETED"
            ]
          },
          "collectionFormat": "multi",
          "required": false,
          "enum": [
            "INIT",
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        }],
        "tags": ["Conversion2PDF"],
        "consumes": ["application/json"]
      }
    },
    "/conversion2pdf/jobs/{jobid}": {
      "get": {
        "summary": "Job definition and state",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get the PDF job definition and current state. Please note that you can differentiate based on http response status.",
        "operationId": "getJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/ConversionJobResponse"},
            "description": "PDF job returned and Job is done or in error"
          },
          "202": {
            "schema": {"$ref": "#/definitions/ConversionJobResponse"},
            "description": "PDF job returned and Job is still processing"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Conversion2PDF"],
        "consumes": ["application/json"]
      },
      "delete": {
        "summary": "Delete a job manually",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete the PDF job and all related files.",
        "operationId": "deleteJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/ConversionJobResponse"},
            "description": "PDF job returned and Job is done or in error"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Could not delete all parts"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Conversion2PDF"],
        "consumes": ["application/json"]
      },
      "put": {
        "summary": "Submit PDF job for processing",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Start PDF conversion. Convert the previously uploaded file(s) to PDF. The settings supplied with the job in the request body are used for the conversion. You can only submit the job after a new Job is created with status INPUTS_UPLOADED or resubmit an existing Job with status ERROR. In all cases the job Id in the path must match the jobId in the request.",
        "operationId": "submitJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/ConversionJobResponse"},
            "description": "Conversion job submitted"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Resubmitted job not allowed because the job is currently processing or already processed and had status DONE"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "jobid",
            "description": "jobid",
            "type": "string",
            "required": true
          },
          {
            "schema": {"$ref": "#/definitions/ConversionJob"},
            "in": "body",
            "name": "job",
            "description": "jobEntity",
            "required": true
          }
        ],
        "tags": ["Conversion2PDF"],
        "consumes": ["application/json;charset=UTF-8"]
      }
    },
    "/conversion2pdf/jobs/{jobid}/streams/result": {"get": {
      "summary": "Get the current result stream",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/octet-stream"],
      "description": "Get the PDF as binary stream/file.\r\nOur API generation does not allow changing the media type based on the Accepted header unfortunately.\r\nThis means we use a seperate path postfix with the value '/stream'.\r\nThis API only returns the PDF when the response status.",
      "operationId": "getStream",
      "responses": {
        "200": {
          "schema": {
            "format": "byte",
            "type": "string"
          },
          "description": "PDF successfully created and returned"
        },
        "202": {
          "schema": {
            "format": "byte",
            "type": "string"
          },
          "description": "PDF not yet created. Job is still executing. Will return the JSON job instead of the PDF"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "PDF could not be created."
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id. No response body is supplied"
        }
      },
      "parameters": [{
        "in": "path",
        "name": "jobid",
        "description": "jobid",
        "type": "string",
        "required": true
      }],
      "tags": ["Conversion2PDF"],
      "consumes": ["application/json"]
    }},
    "/conversion2pdf/jobs/{jobid}/streams/multipart": {"post": {
      "summary": "Upload a file",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload an image, office or pdf for conversion to PDF. Please note that you can upload multiple files. Conversion will not be started yet.",
      "operationId": "addInputFile",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/ConversionJobResponse"},
          "description": "File uploaded. The JSON Job response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Job could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        },
        {
          "in": "formData",
          "name": "stream",
          "description": "The (additional) binary image or PDF (file/inputstream) to convert to PDF",
          "type": "file",
          "required": true
        },
        {
          "in": "query",
          "name": "fileName",
          "description": "Optional input file name.",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Conversion2PDF"],
      "consumes": ["multipart/form-data"]
    }}
  },
  "host": "gw.api.cloud.sphereon.com",
  "schemes": ["https"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://gw.api.cloud.sphereon.com/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "ResultResponse": {
      "description": "Result response",
      "type": "object",
      "properties": {"streamLocations": {
        "description": "Result Stream Locations",
        "readOnly": true,
        "type": "array",
        "items": {"$ref": "#/definitions/StreamLocation"}
      }}
    },
    "Compression": {
      "description": "Compression settings",
      "type": "object",
      "properties": {
        "level": {
          "format": "int32",
          "description": "Compression level. Value from 0 (min) to 10 (max) allowed",
          "maximum": 10,
          "type": "integer",
          "minimum": 0
        },
        "type": {
          "description": "Compression type. ADVANCED is only allowed in combination with the ADVANCED engine!",
          "type": "string",
          "enum": [
            "NONE",
            "ADVANCED"
          ]
        }
      }
    },
    "Lifecycle": {
      "description": "Lifecycle settings. When no lifecycle settings are supplied, the job and files will be deleted directly after retrieval of the file",
      "type": "object",
      "properties": {
        "applicableJobStatusses": {
          "description": "Job status needs to be in this list in order for the action to be performed!",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "INIT",
              "INPUTS_UPLOADED",
              "PROCESSING",
              "DONE",
              "ERROR",
              "DELETED"
            ]
          }
        },
        "action": {
          "type": "string",
          "enum": [
            "DELETE",
            "NONE"
          ]
        },
        "type": {
          "type": "string",
          "enum": ["RETRIEVAL"]
        }
      }
    },
    "Error": {
      "description": "An error",
      "type": "object",
      "required": [
        "code",
        "level",
        "message"
      ],
      "properties": {
        "code": {"type": "string"},
        "level": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "FATAL"
          ]
        },
        "cause": {"$ref": "#/definitions/Error"},
        "message": {"type": "string"}
      }
    },
    "ResultSettings": {
      "description": "Result settings",
      "type": "object",
      "properties": {
        "lifecycle": {"$ref": "#/definitions/Lifecycle"},
        "storageLocation": {
          "description": "Result Storage location",
          "$ref": "#/definitions/StorageLocation"
        },
        "compression": {"$ref": "#/definitions/Compression"},
        "fileFormat": {
          "description": "Resulting file format. Restrictions apply. Default : PDF",
          "type": "string",
          "enum": [
            "PDF",
            "XLSX",
            "DOCX"
          ]
        }
      }
    },
    "StreamLocation": {
      "description": "Location record of data stream",
      "type": "object",
      "properties": {
        "folderPath": {
          "description": "The path of the folder in the container (if any). Please note that a folder can be virtual depending on the backend",
          "type": "string"
        },
        "fullPath": {
          "description": "The fully resolved path of the file, folder and container. This path corresponds with the /streams/path endpoints. This value is automatically determined",
          "readOnly": true,
          "type": "string"
        },
        "filename": {
          "description": "The current filename",
          "type": "string"
        },
        "id": {
          "description": "The auto generated ID for this location",
          "readOnly": true,
          "type": "string"
        },
        "containerId": {
          "description": "The container Id",
          "type": "string"
        },
        "originalFilename": {
          "description": "The original filename. Handy for later clientside naming",
          "type": "string"
        }
      }
    },
    "CSVSettings": {
      "description": "Specify CSV settings if one of the input files is a CSV",
      "type": "object",
      "properties": {
        "separatorCharacter": {
          "description": "Set the separator for the columns. Choose between a comma (,), semicolon(;) and tab(\t)",
          "type": "string",
          "enum": [
            "COMMA",
            "SEMICOLON",
            "TAB"
          ]
        },
        "standardRowHeight": {
          "format": "double",
          "description": "Set the standard row Height. Range from 1 (lowest) to 409 (highest)",
          "maximum": 409,
          "type": "number",
          "minimum": 1
        },
        "standardColumnWidth": {
          "format": "double",
          "description": "Set the quality factor for the resulting PDF. Range from 1 (lowest) to 255 (highest)",
          "maximum": 255,
          "type": "number",
          "minimum": 1
        }
      }
    },
    "ConversionJobResponse": {
      "description": "The PDF job. Has access to the job settings as well as (ocr) engine tasks",
      "type": "object",
      "required": [
        "input",
        "job",
        "jobId",
        "result",
        "status"
      ],
      "properties": {
        "result": {
          "description": "The result(s)",
          "readOnly": true,
          "$ref": "#/definitions/ResultResponse"
        },
        "completionTime": {
          "format": "date-time",
          "description": "The completion date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "input": {
          "description": "The input(s)",
          "readOnly": true,
          "$ref": "#/definitions/InputResponse"
        },
        "jobId": {
          "description": "The job id",
          "readOnly": true,
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "conversionTasks": {
          "type": "array",
          "items": {"$ref": "#/definitions/ConversionTask"}
        },
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "job": {
          "description": "The job",
          "readOnly": true,
          "$ref": "#/definitions/ConversionJob"
        },
        "statusMessage": {
          "description": "A status message, which can be informational, warning or error. AA message here does not indicate an error perse",
          "readOnly": true,
          "type": "string"
        },
        "queueTime": {
          "format": "date-time",
          "description": "The conversion queue date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the job",
          "readOnly": true,
          "type": "string",
          "enum": [
            "INIT",
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        }
      }
    },
    "ConversionSettings": {
      "description": "Conversion settings",
      "type": "object",
      "properties": {
        "qualityFactor": {
          "format": "int32",
          "description": "Set the quality factor for the resulting PDF. Range from 0 (lowest) to 10 (highest)",
          "maximum": 10,
          "type": "integer",
          "minimum": 0
        },
        "result": {
          "description": "The result file and lifecycle settings",
          "$ref": "#/definitions/ResultSettings"
        },
        "input": {
          "description": "The input file and lifecycle settings",
          "$ref": "#/definitions/InputSettings"
        },
        "engine": {
          "description": "Engine to use for conversion. Costs apply. Default engine : ADVANCED",
          "type": "string",
          "enum": [
            "BASIC",
            "ADVANCED",
            "PREMIUM"
          ]
        },
        "csv": {"$ref": "#/definitions/CSVSettings"},
        "containerConversion": {
          "description": "Specify which container to process. Currently used for email (ALL=Both message and attachments, MAIN=Only message, SUB=attachments",
          "type": "string",
          "enum": [
            "ALL",
            "MAIN",
            "SUB"
          ]
        },
        "version": {
          "description": "The PDF version to use for conversion. Default value : PDF_1_7",
          "type": "string",
          "enum": [
            "PDF_1_4",
            "PDF_1_5",
            "PDF_1_6",
            "PDF_1_7",
            "PDF_A_1b"
          ]
        },
        "jobLifecycle": {
          "description": "The lifecycle of the job itself",
          "$ref": "#/definitions/Lifecycle"
        },
        "ocrMode": {
          "description": "Specify if a file must be processed by OCR engine. Default ocrMode : AUTO (only when not already processed)",
          "type": "string",
          "enum": [
            "ALWAYS",
            "NEVER",
            "AUTO"
          ]
        }
      }
    },
    "ErrorResponse": {
      "description": "The error response",
      "type": "object",
      "properties": {"errors": {
        "type": "array",
        "items": {"$ref": "#/definitions/Error"}
      }}
    },
    "InputResponse": {
      "description": "Input response",
      "type": "object",
      "properties": {"streamLocations": {
        "description": "Input Stream Locations",
        "type": "array",
        "items": {"$ref": "#/definitions/StreamLocation"}
      }}
    },
    "ConversionTaskInput": {
      "description": "Conversion Task Input",
      "type": "object",
      "properties": {"streamLocations": {
        "description": "Input Stream Locations",
        "type": "array",
        "items": {"$ref": "#/definitions/StreamLocation"}
      }}
    },
    "ConversionTask": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The current job Id",
          "readOnly": true,
          "type": "string"
        },
        "queueId": {
          "description": "The queue Id provided by a backend system",
          "readOnly": true,
          "type": "string"
        },
        "engine": {
          "description": "The Engine being used",
          "readOnly": true,
          "type": "string",
          "enum": [
            "ADVANCED",
            "PREMIUM",
            "BASIC"
          ]
        },
        "conversionInput": {
          "description": "Conversion input",
          "readOnly": true,
          "$ref": "#/definitions/ConversionTaskInput"
        },
        "documentId": {
          "description": "The document Id provided by a backend system",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the Conversion task itself",
          "readOnly": true,
          "type": "string",
          "enum": [
            "REQUESTED",
            "QUEUED",
            "PROCESSING",
            "DONE",
            "ERROR"
          ]
        }
      }
    },
    "ConversionJob": {
      "description": "The PDF conversion job. Has access to the job settings.",
      "type": "object",
      "required": [
        "jobId",
        "settings"
      ],
      "properties": {
        "jobId": {
          "description": "The server generated job jobId. This jobId is checked against the jobId in the request path on overy invocation",
          "readOnly": true,
          "type": "string"
        },
        "settings": {
          "description": "The settings to use during the conversion job",
          "readOnly": true,
          "$ref": "#/definitions/ConversionSettings"
        }
      }
    },
    "StorageLocation": {
      "description": "Storage Location",
      "type": "object",
      "properties": {
        "folderPath": {
          "description": "The path of the folder in the container (if any). Please note that a folder can be virtual depending on the backend",
          "type": "string"
        },
        "fullPath": {
          "description": "The full path with the container part",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The auto generated ID for this location",
          "readOnly": true,
          "type": "string"
        },
        "containerId": {
          "description": "The container Id",
          "type": "string"
        }
      }
    },
    "InputSettings": {
      "description": "Input settings. Specify, if applicable, external location of the inputfile(s)",
      "type": "object",
      "properties": {
        "lifecycle": {
          "description": "The lifecycle of input files",
          "$ref": "#/definitions/Lifecycle"
        },
        "storageLocation": {
          "description": "Input Storage location. This where input files will be stored when addInput is called",
          "$ref": "#/definitions/StorageLocation"
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "description": "The PDF conversion API 'conversion2pdf' converts image, office and PDF files to (searcheable) PDF files.\r\n\r\nThe flow is generally as follows:\r\n1. First create a job using the /conversion2pdf/jobs POST endpoint. You will get back a job response that contains a job with its associated settings.\r\n2. Upload one or more images/files using the /conversion2pdf/jobs/{jobId}/streams/multipart POST endpoint. You can also add stream locations from the storage API . You will get back the update job response that contains a job with its associated settings. Currently you can only merge spreadsheets with spreadsheet, documents with documents and images/pdfs with images/pdfs\r\n3. Start the job from a PUT request to the /conversion2pdf/jobs/{jobid} endpoint, with the Job and Settings JSON as request body. The conversion to PDF will now start. The OCR setting is only applicable to images, since other files will always be searchable.\r\n4. Check the job status from the /conversion2pdf/jobs/{jobid} GET endpoint until the status has changed to DONE or ERROR. Messaging using a websocket will be available as an alternative in a future version\r\n5. Retrieve the PDF file using the /conversion2pdf/jobs/{jobid}/streams/result GET endpoint. This will return the PDF file only when the status is DONE. In other cases it will return the Job Response JSON (with http code 202 instead of 200)\r\n\r\n\r\nInteractive testing: A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store<\/a>",
    "termsOfService": "https://sphereon.com",
    "title": "PDF",
    "version": "1.1"
  },
  "tags": [{
    "name": "Conversion2PDF",
    "description": "Conversion to PDF API"
  }]
}